/* Header: */

%include "/gpfsFS2/sasdata/adhoc/tpmg/moc/scl/code/Utilities/sch_general_utility.sas";

<<<<<<< HEAD
/*4/6/22 edit working*/
>>>>>>> main
%LET SASFILEPATH = 'Q:\Category\Quality\Code\PROMPT_Inreach_Summary.sas';
 
%LET LMC = 'SCH','MTN','MIL','CMB','SCL','SKP';

%LET MED_CTR_ID = 14;
%LET SYSTEM = 'KPHC';
%LET USER_TYPE = 'BWK'; 
%LET TPMG = '06';
%LET COASYS = 'ONELINK';
%LET COAFUND = '20','30';

PROC FORMAT;
	VALUE $FACABBR
	'20800' ='CMB'
	'20813' ='MIL'
	'20779' ='MTN'
	'20764' ='SCB'
	'20751' ='SCH'
	'20808' ='SKP'
	OTHER = 'OTHER'
	;
RUN;

DATA KPHC_DEPTS;
	SET ROLLUP.ROLLUP_SYSTEM;
	WHERE MED_CTR_ID = &MED_CTR_ID
		AND SYSTEM = &SYSTEM
	;
	UNIT_FAC = TRIM(SUBSTR(UNIT_NAME,1,3))||"-"||TRIM(SUBSTR(UNIT_NAME,11,50));
RUN;


DATA DATES;

	RUNDATE = TODAY();
	/**/
	INREACH_BEG_DT = INTNX('WEEK',RUNDATE,-1,'B');	
	INREACH_END_DT = INTNX('WEEK',INREACH_BEG_DT,0,'E');

	LOOKBACK_30D_E = INTNX('WEEK',INREACH_END_DT - 30,-1,'E');
	LOOKBACK_30D_B = INTNX('WEEK',LOOKBACK_30D_E,0,'B');

	LOOKBACK_7D_EDHMS = DHMS(INTNX('WEEK',INREACH_END_DT - 7,-1,'E'),23,59,59);
	LOOKBACK_7D_BDMHS = DHMS(INTNX('WEEK',DATEPART(LOOKBACK_7D_EDHMS),0,'B'),0,0,0);

	LOOKBACK_7D_B = INTNX('WEEK',DATEPART(LOOKBACK_7D_EDHMS),0,'B');

	INREACH_BEG_DHMS = DHMS(INREACH_BEG_DT,0,0,0);	
	INREACH_END_DHMS = DHMS(INREACH_END_DT,23,59,59);

	
	CALL SYMPUT('BEG_DT',INREACH_BEG_DT);
	CALL SYMPUT('END_DT',INREACH_END_DT);

	CALL SYMPUT('LOOKBACK_30D_B',LOOKBACK_30D_B);
	CALL SYMPUT('LOOKBACK_30D_E',LOOKBACK_30D_E);

	CALL SYMPUT('LOOKBACK_7D_B',LOOKBACK_7D_BDMHS);
	CALL SYMPUT('LOOKBACK_7D_E',LOOKBACK_7D_EDHMS);

	CALL SYMPUT('BEG_DHMS',INREACH_BEG_DHMS);
	CALL SYMPUT('END_DHMS',INREACH_END_DHMS);

	CALL SYMPUT('A1C_RSLT_BEG_DT',"TIMESTAMP'" || PUT(LOOKBACK_7D_B, YYMMDD10.) || " 00:00:00'");

	CALL SYMPUT('PRINT_RPT_BEG',PUT(INREACH_BEG_DT,MMDDYY10.));
	CALL SYMPUT('PRINT_RPT_END',PUT(INREACH_END_DT,MMDDYY10.));

	FORMAT RUNDATE INREACH_BEG_DT INREACH_END_DT LOOKBACK_30D_E LOOKBACK_30D_B LOOKBACK_7D_B MMDDYY10. 
		   LOOKBACK_7D_EDHMS LOOKBACK_7D_BDMHS INREACH_BEG_DHMS INREACH_END_DHMS  DATETIME22.3 ;
	
RUN;
%PUT INFO: &A1C_RSLT_BEG_DT;

%_pc_libqip();

proc sql;
	create table PROMPT_INREACH_CANCER as
	select 
		A.*
		,a.ScreeningCompleteIn30DaysFlag as ScreeningCompletedWithin30DaysFl
		,CASE WHEN A.contactdate BETWEEN &LOOKBACK_30D_B AND &LOOKBACK_30D_E THEN 'LOOKBACK'
			ELSE 'CURRENT' END AS RPT_PERIOD
	from _PC_QIP.v_PROMPTCancerInreachScreenDtl A		
	where A.MedFacCode IN(&LMC)
		AND (A.contactdate BETWEEN &LOOKBACK_30D_B AND &LOOKBACK_30D_E
			OR 
			A.contactdate BETWEEN &BEG_DT AND &END_DT
			)
			
	;
quit;

PROC SQL;
	CREATE TABLE CANCER_INREACH_SUMMARY AS SELECT
		ROOMINGPROVIDERNUID
		,RPT_PERIOD
		,INTNX('WEEK',CONTACTDATE,0,'B') AS PER_BEG FORMAT YYMMDD10.
		,SUM(CAREGAPCOUNT) AS GAPS
		,SUM(ACTIONTAKENCOUNT) AS ACTION_TAKEN
		,SUM(SUCCESSFULACTIONCOUNT) AS ACTION_SUCCESS
		,SUM(ScreeningCompleteIn30DaysFlag) AS SCREEN_SUCCESS
	FROM PROMPT_INREACH_CANCER
	GROUP BY 1,2,3
	ORDER BY 1,2,3
	;
QUIT;

DATA CANCER_INREACH_SUMMARY;	
	SET CANCER_INREACH_SUMMARY;
	RPT_WK = INTNX('WEEK',&BEG_DT,0,'B');
	PATH = 'CANCER';
	FORMAT RPT_WK YYMMDD10.;
RUN;

PROC SQL;
	CREATE TABLE INREACH_FAILS_CANCER AS SELECT
		A.RoomingProviderNUID
		,A.ROOMINGPROVIDERNAME
		,A.RPT_PERIOD
		,A.MemberName
		,A.PAT_MRN_iD
		,A.PROMPTCarepathCode		
		,MAX(A.CONTACTDATE) AS VST_DATE FORMAT MMDDYY10.		
	
	FROM PROMPT_INREACH_CANCER A
	LEFT JOIN (SELECT DISTINCT
				PAT_MRN_ID
				,PROMPTCAREPATHCODE
				,RPT_PERIOD
				FROM PROMPT_INREACH_CANCER
				WHERE ScreeningCompleteIn30DaysFlag = 1) B
		ON A.PAT_MRN_ID = B.PAT_MRN_iD
		AND A.PROMPTCAREPATHCODE = B.PROMPTCAREPATHCODE
		AND A.RPT_PERIOD = B.RPT_PERIOD
	WHERE 
		((A.RPT_PERIOD = 'CURRENT' AND A.ACTIONTAKENCOUNT = 0)
		OR (A.RPT_PERIOD = 'LOOKBACK' AND A.ScreeningCompletedWithin30DaysFl = 0)
		)
		AND B.PAT_mRN_ID IS NULL
		
	GROUP BY 1,2,3,4,5,6	
	ORDER BY 1,2,3,4,5,6
	
	;
QUIT;

PROC TRANSPOSE DATA=INREACH_FAILS_CANCER OUT=FAIL_TRANSPOSE_CANCER (DROP=_LABEL_ _NAME_);
	BY RoomingProviderNUID ROOMINGPROVIDERNAME RPT_PERIOD MemberName PAT_MRN_ID;
	ID PROMPTCarepathCode;
	VAR VST_DATE;
RUN;

proc sql;
	create table PROMPT_INREACH_DMEYE as select 
		A.*
		,CASE WHEN A.contactdate BETWEEN &LOOKBACK_30D_B AND &LOOKBACK_30D_E THEN 'LOOKBACK'
			ELSE 'CURRENT' END AS RPT_PERIOD
	from _PC_QIP.v_RPT_RetinopathyInreachDetail A
	where 
		MedicalCenterAreaCode IN(&LMC)
		AND (A.contactdate BETWEEN &LOOKBACK_30D_B AND &LOOKBACK_30D_E
			OR 
			A.contactdate BETWEEN &BEG_DT AND &END_DT
			)
	;
quit;
		
PROC SQL;
	CREATE TABLE DMEYE_INREACH_SUMMARY AS SELECT
		ROOMINGPROVIDERNUID
		,RPT_PERIOD
		,INTNX('WEEK',CONTACTDATE,0,'B') AS PER_BEG FORMAT YYMMDD10.
		,SUM(CaregapFlag) AS GAPS
		,SUM(ActionTakenFlag) AS ACTION_TAKEN		
		,SUM(ScreeningWithin30DaysFlag) AS SCREEN_SUCCESS
	FROM PROMPT_INREACH_DMEYE
	GROUP BY 1,2,3
	ORDER BY 1,2,3
	;
QUIT;

DATA DMEYE_INREACH_SUMMARY;	
	SET DMEYE_INREACH_SUMMARY;
	RPT_WK = INTNX('WEEK',&BEG_DT,0,'B');
	PATH = 'DM_EYE';
	FORMAT RPT_WK YYMMDD10.;
RUN;

PROC SQL;
	CREATE TABLE INREACH_FAILS_DMEYE AS SELECT
		A.RoomingProviderNUID
		,A.PROMPTRoomingProviderName AS ROOMINGPROVIDERNAME
		,A.RPT_PERIOD
		,A.MemberName
		,'1100'||TRIM(A.MRN) AS PAT_MRN_iD
		,A.CarepathCode AS PROMPTCarepathCode
		,A.CarepathCode	
		,A.MRN
		
		,MAX(A.CONTACTDATE) AS VST_DATE FORMAT MMDDYY10.		
	
	FROM PROMPT_INREACH_DMEYE A
	LEFT JOIN (SELECT DISTINCT
				'1100'||TRIM(MRN) AS PAT_MRN_iD
				,CarepathCode AS PROMPTCarepathCode
				,CarepathCode
				,RPT_PERIOD
				,MRN
				FROM PROMPT_INREACH_DMEYE
				WHERE ScreeningWithin30DaysFlag = 1) B
		ON A.MRN = B.MRN
		AND A.CarepathCode = B.CarepathCode
		AND A.RPT_PERIOD = B.RPT_PERIOD
	WHERE 
		((A.RPT_PERIOD = 'CURRENT' AND A.ActionTakenFlag = 0)
		OR (A.RPT_PERIOD = 'LOOKBACK' AND A.ScreeningWithin30DaysFlag = 0)
		)
		AND B.MRN IS NULL
		
	GROUP BY 1,2,3,4,5,6,7,8	
	ORDER BY 1,2,3,4,5,6,7,8
	
	;
QUIT;

PROC TRANSPOSE DATA=INREACH_FAILS_DMEYE OUT=FAIL_TRANSPOSE_DMEYE (DROP=_LABEL_ _NAME_);
	BY RoomingProviderNUID ROOMINGPROVIDERNAME RPT_PERIOD MemberName PAT_MRN_ID;
	ID PROMPTCarepathCode;
	VAR VST_DATE;
RUN;

proc sql;
	create table PROMPT_INREACH_A1C as
	select *
		,CASE WHEN A.InreachDate BETWEEN  &LOOKBACK_7D_B AND &LOOKBACK_7D_E THEN 'LOOKBACK'
			ELSE 'CURRENT' END AS RPT_PERIOD
	from _PC_QIP.v_PROMPTA1CInreachFact A
	where MedCenterAreaCode IN(&LMC)
		AND (A.InreachDate BETWEEN &LOOKBACK_7D_B AND &LOOKBACK_7D_E
			OR 
			A.InreachDate BETWEEN &BEG_DHMS AND &END_DHMS
			)
		;
quit;

PROC SORT DATA=PROMPT_INREACH_A1C (KEEP=MRN) NODUPKEY OUT=MRNLIST;
	BY MRN;
RUN;

DATA PTLIST; 
	SET MRNLIST;
	MRN12 = '1100'||COMPRESS(MRN);
RUN;
%USHARE_TABLE_LOAD_TEST(PTLIST);

PROC SQL;
%_pc_connora(_CONNECTION=GLOBAL);
	CREATE TABLE A1C_HX
	AS SELECT * FROM CONNECTION TO ORA 
	(SELECT 
		Z.MRN12
		,Z.MRN
		,PAT.PAT_ID
		,ORD.DESCRIPTION
		,ORD.ORDER_PROC_iD
		,ORD.ORDERING_DATE
		,AA.RESULT_DATE
		,AA.ORD_VALUE
		,AA.ORD_NUM_VALUE
		,AA.COMPONENT_ID
		,CC.NAME AS COMPONENT_NAME
	FROM SCHMOC_PTLIST Z
	LEFT JOIN HCCLNC.PATIENT PAT
		ON Z.MRN12 = PAT.PAT_MRN_ID
	LEFT JOIN HCCLNC.ORDER_PROC ORD
		ON PAT.PAT_ID = ORD.PAT_ID		
	LEFT JOIN HCCLNC.ORDER_RESULTS AA
		ON ORD.ORDER_PROC_ID = AA.ORDER_PROC_ID
	LEFT JOIN HCCLNC.CLARITY_COMPONENT CC
		ON AA.COMPONENT_ID = CC.COMPONENT_ID
	WHERE AA.RESULT_DATE >= &A1C_RSLT_BEG_DT
		AND AA.COMPONENT_ID IN(1209270)
 	);
	
DISCONNECT FROM ORA;
QUIT;

PROC SQL;
	CREATE TABLE PROMPT_INREACH_A1C_TEST AS SELECT
		A.*
		,CASE WHEN B.PROMPTUtilizationKey THEN 1
			ELSE 0 END AS ScreeningWithin7DaysFlag
	FROM PROMPT_INREACH_A1C A
	LEFT JOIN (SELECT DISTINCT
					A.MRN
					,A.PROMPTUtilizationKey
				FROM PROMPT_INREACH_A1C A
				LEFT JOIN A1C_HX B
					ON A.MRN = B.MRN
				WHERE A.INREACHDATE <= B.RESULT_DATE <= A.INREACHDATE + DHMS(7,0,0,0)
				) B
		ON A.PROMPTUtilizationKey = B.PROMPTUtilizationKey
	ORDER BY A.INREACHDATE
	;
QUIT;
	
PROC SQL;
	CREATE TABLE A1C_INREACH_SUMMARY AS SELECT
		NUID as ROOMINGPROVIDERNUID
		,RPT_PERIOD
		,INTNX('WEEK',DATEPART(INREACHDATE),0,'B') AS PER_BEG FORMAT YYMMDD10.
		,SUM(CareGapCount) AS GAPS
		,SUM(ActionTakenCount) AS ACTION_TAKEN
		,SUM(ScreeningWithin7DaysFlag) AS SCREEN_SUCCESS
	FROM PROMPT_INREACH_A1C_TEST
	GROUP BY 1,2,3
	ORDER BY 1,2,3
	;
QUIT;

DATA A1C_INREACH_SUMMARY;	
	SET A1C_INREACH_SUMMARY;
	RPT_WK = INTNX('WEEK',&BEG_DT,0,'B');
	PATH = 'A1CTST';
	FORMAT RPT_WK YYMMDD10.;
RUN;

PROC SQL;
	CREATE TABLE INREACH_FAILS_A1CTEST AS SELECT
		A.NUID AS RoomingProviderNUID
		,A.ProviderName AS ROOMINGPROVIDERNAME
		,A.RPT_PERIOD
		,"XXXX" AS MemberName
		,'1100'||TRIM(A.MRN) AS PAT_MRN_iD
		,A.PROMPTCarepathCode		
		,A.MRN
		
		,MAX(DATEPART(A.InreachDate)) AS VST_DATE FORMAT MMDDYY10.		
	
	FROM PROMPT_INREACH_A1C_TEST A
	LEFT JOIN (SELECT DISTINCT
				'1100'||TRIM(MRN) AS PAT_MRN_iD
				,PROMPTCarepathCode				
				,RPT_PERIOD
				,MRN
				FROM PROMPT_INREACH_A1C_TEST
				WHERE ScreeningWithin7DaysFlag = 1) B
		ON A.MRN = B.MRN
		AND A.PROMPTCarepathCode = B.PROMPTCarepathCode
		AND A.RPT_PERIOD = B.RPT_PERIOD
	WHERE 
		((A.RPT_PERIOD = 'CURRENT' AND A.ActionTakenCount = 0)
		OR (A.RPT_PERIOD = 'LOOKBACK' AND A.ScreeningWithin7DaysFlag = 0)
		)
		AND B.MRN IS NULL
		
	GROUP BY 1,2,3,4,5,6,7	
	ORDER BY 1,2,3,4,5,6,7
	
	;
QUIT;

PROC TRANSPOSE DATA=INREACH_FAILS_A1CTEST OUT=FAIL_TRANSPOSE_A1CTEST (DROP=_LABEL_ _NAME_);
	BY RoomingProviderNUID ROOMINGPROVIDERNAME RPT_PERIOD MemberName PAT_MRN_ID;
	ID PROMPTCarepathCode;
	VAR VST_DATE;
RUN;

proc sql;
	create table PROMPT_OUTREACH_CANCER as
	select 
		A.*
		,a.ScreenedWithin30DaysCount as ScreeningCompletedWithin30DaysFl
		,CASE WHEN A.ACTIONDATE BETWEEN &LOOKBACK_30D_B AND &LOOKBACK_30D_E THEN 'LOOKBACK'
			ELSE 'CURRENT' END AS RPT_PERIOD
	from _PC_QIP.v_PROMPTCancerScreenOutreachFact A		
	where A.MedicalCenterLocCode IN(&LMC)
		AND (A.ACTIONDATE BETWEEN &LOOKBACK_30D_B AND &LOOKBACK_30D_E
			OR 
			A.ACTIONDATE BETWEEN &BEG_DT AND &END_DT
			)			
	;
quit;

PROC SQL;
	CREATE TABLE CANCER_OUTREACH_SUMMARY AS SELECT
		OutreachStaffNUID as ROOMINGPROVIDERNUID
		,RPT_PERIOD
		,INTNX('WEEK',ACTIONDATE,0,'B') AS PER_BEG FORMAT YYMMDD10.
		,SUM(DenominatorCount) AS GAPS /*CALLS*/
		,SUM(ReachedCount) AS ACTION_SUCCESS /*REACHED*/
		,SUM(ScreeningCompletedWithin30DaysFl) AS SCREEN_SUCCESS /*OUTREACH_SUCCESS*/
	FROM PROMPT_OUTREACH_CANCER
	GROUP BY 1,2,3
	ORDER BY 1,2,3
	;
QUIT;

DATA CANCER_OUTREACH_SUMMARY;	
	SET CANCER_OUTREACH_SUMMARY;
	RPT_WK = INTNX('WEEK',&BEG_DT,0,'B');
	PATH = 'OUTRCH';
	FORMAT RPT_WK YYMMDD10.;
RUN;

LIBNAME _PC_QIP CLEAR;

PROC SORT DATA= FAIL_TRANSPOSE_CANCER;
	BY RoomingProviderNUID ROOMINGPROVIDERNAME RPT_PERIOD PAT_MRN_iD;
RUN; 

PROC SORT DATA= FAIL_TRANSPOSE_DMEYE;
	BY RoomingProviderNUID ROOMINGPROVIDERNAME RPT_PERIOD PAT_MRN_iD;
RUN; 

PROC SORT DATA= FAIL_TRANSPOSE_A1CTEST;
	BY RoomingProviderNUID ROOMINGPROVIDERNAME RPT_PERIOD PAT_MRN_iD;
RUN; 

DATA PROMPT_FAILS_ALL;
	MERGE FAIL_TRANSPOSE_CANCER (DROP=MemberName)
		  FAIL_TRANSPOSE_DMEYE (DROP=MemberName)
		  FAIL_TRANSPOSE_A1CTEST (DROP=MemberName);
	BY RoomingProviderNUID ROOMINGPROVIDERNAME RPT_PERIOD PAT_MRN_iD;
RUN;

PROC SORT DATA=PROMPT_FAILS_ALL (KEEP=PAT_MRN_ID) OUT=NAMESLIST NODUPKEY;
	BY PAT_MRN_ID;
RUN;

 %USHARE_TABLE_LOAD_TEST(NAMESLIST);

PROC SQL;
%_pc_connora(_CONNECTION=GLOBAL);
	CREATE TABLE FAILS_PAT_NAMES
	AS SELECT * FROM CONNECTION TO ORA 
	(SELECT 
		PAT.PAT_ID
		,PAT.PAT_MRN_ID
		,PAT.PAT_NAME
	FROM SCHMOC_NAMESLIST Z
	LEFT JOIN HCCLNC.PATIENT PAT
		ON Z.PAT_MRN_ID = PAT.PAT_MRN_ID
	
 	);

DISCONNECT FROM ORA;
QUIT;

DATA PROMPT_INFO_ALL;
	SET 
		CANCER_INREACH_SUMMARY
		DMEYE_INREACH_SUMMARY
		A1C_INREACH_SUMMARY
		CANCER_OUTREACH_SUMMARY
		;
RUN;


PROC SORT DATA=PROMPT_INFO_ALL OUT=STAFF_NUID_LIST (KEEP=ROOMINGPROVIDERNUID) NODUPKEY;
	BY ROOMINGPROVIDERNUID;
RUN;

PROC SQL;
	CREATE TABLE USER_INFO AS SELECT
		B.MED_CTR_ID
		,B.REGN
		,B.ENTN
		,B.LOCN
		,B.CTRN
		,B.NUID
		,B.LNAME
		,B.FNAME
		,B.MNAME
		,b.JOB_DESCR
		,B.JOBCODE
		,B.SUPERVISOR_NUID
		,B.SUPERVISOR_NAME
		,B.SUPERVISOR_EMAIL
	FROM STAFF_NUID_LIST A
		LEFT JOIN ROLLUP.USER B
			ON A.ROOMINGPROVIDERNUID = B.NUID
	WHERE B.USER_TYPE IN(&USER_TYPE)
		AND B.MED_CTR_ID=&MED_CTR_ID
/*		AND B.ENTN IN(&TPMG)*/
	;
QUIT;

PROC SORT DATA=USER_INFO (WHERE=(MED_CTR_ID=&MED_CTR_ID AND ENTN IN(&TPMG))KEEP=MED_CTR_ID REGN ENTN LOCN CTRN) NODUPKEY OUT=GL_LIST;
	BY MED_CTR_ID REGN ENTN LOCN CTRN;
RUN;

PROC SQL;
	CREATE TABLE LOCN_NAMES AS SELECT DISTINCT
		*
	FROM ROLLUP.ROLLUP_GL_LOCN
	WHERE MED_CTR_ID = &MED_CTR_ID
		AND COA_SYSTEM = &COASYS
	;
QUIT;

PROC SQL;
	CREATE TABLE DEPT_NAMES AS SELECT DISTINCT
		C.MED_CTR_ID
		,C.ENTN
		,C.LOCN
		,C.CTRN 
		,C.LOCAL_DEPT_ID3
	FROM GL_LIST B
		LEFT JOIN ROLLUP.ROLLUP_GL 	C
			ON B.MED_CTR_ID = C.MED_CTR_ID
			AND B.ENTN = C.ENTN
			AND B.LOCN = C.LOCN
			AND B.CTRN = C.CTRN
			AND C.COA_SYSTEM IN(&COASYS)
			AND C.FUND IN(&COAFUND)
	;
QUIT;

PROC SQL;
	CREATE TABLE COMBO_DATA AS SELECT
		AA.*		
		,B.*
		,CASE WHEN LOCN.LOCN THEN LOCN.FAC_ID		
			ELSE 'RVW' END AS LOCN_DESC
		,C.LOCAL_DEPT_ID3		
		,INFO.*
	FROM STAFF_NUID_LIST AA
	INNER JOIN USER_INFO B
		ON AA.ROOMINGPROVIDERNUID = B.NUID
	LEFT JOIN DEPT_NAMES C
		ON B.MED_CTR_ID = C.MED_CTR_ID
		AND B.ENTN = C.ENTN
		AND B.LOCN = C.LOCN
		AND B.CTRN = C.CTRN 
	LEFT JOIN LOCN_NAMES LOCN
		ON C.LOCN = LOCN.LOCN
	LEFT JOIN PROMPT_INFO_ALL INFO
		ON AA.ROOMINGPROVIDERNUID = INFO.ROOMINGPROVIDERNUID	

	;
QUIT;

data COMBO_DATA;
set COMBO_DATA;
array change _numeric_;
    do over change;
        if change=. then change=0;
    end;
ACTION_PERC = ACTION_TAKEN/GAPS;
SCRN_PERC = SCREEN_SUCCESS/GAPS;
run ;


PROC SQL;
	CREATE TABLE RPT_DATA_EMP AS SELECT
		LOCN_DESC AS FAC
		,LOCAL_DEPT_ID3 AS DEPT
		,SUPERVISOR_NAME 
		,SUPERVISOR_NUID
		,TRIM(LNAME)||", "||TRIM(FNAME) AS EMPL_NAME
		,NUID AS EMPL_NUID
		,JOBCODE
		,JOB_DESCR
		,RPT_PERIOD
		,PATH
		,GAPS
		,ACTION_TAKEN
		,ACTION_SUCCESS
		,SCREEN_SUCCESS
		,ACTION_PERC
		,SCRN_PERC
	FROM COMBO_DATA
	ORDER BY 1,2,3,5,RPT_PERIOD, PATH
	;
QUIT;

PROC SQL;
	CREATE TABLE RPT_DATA_DEPT AS SELECT
		LOCN_DESC AS FAC
		,LOCAL_DEPT_ID3 AS DEPT
		,RPT_PERIOD
		,PATH
		,SUM(GAPS) AS TOTAL_GAPS
		,SUM(ACTION_TAKEN) AS ACTION_DONE
		,SUM(ACTION_SUCCESS) AS SUCCESS_DONE
		,SUM(SCREEN_SUCCESS) AS SCREEN_DONE
		,CALCULATED ACTION_DONE/ CALCULATED TOTAL_GAPS AS ACTION_PERC
		,CALCULATED SCREEN_DONE / CALCULATED TOTAL_GAPS AS SCRN_PERC
	FROM COMBO_DATA
	GROUP BY 1,2,3,4
	ORDER BY 1,2,3,4
	;
QUIT;

DATA RPT_DATA_EMP;
	LENGTH EMPPATHKEY $75.;
	SET RPT_DATA_EMP;
	EMPPATHKEY =TRIM(EMPL_NUID)||TRIM(RPT_PERIOD)||TRIM(PATH);
RUN;

DATA RPT_DATA_DEPT;
	LENGTH DEPTPATHKEY $75.;
	SET RPT_DATA_DEPT;
	DEPTPATHKEY =TRIM(FAC)||TRIM(DEPT)||TRIM(RPT_PERIOD)||TRIM(PATH);
RUN;

PROC SQL;
	CREATE TABLE PT_DETAILS_MOPS AS SELECT
		A.ROOMINGPROVIDERNUID AS NUID
		,A.ROOMINGPROVIDERNAME
		,A.RPT_PERIOD
		,B.PAT_NAME
		,A.PAT_MRN_ID
		,A.PROMPT_BCS
		,A.PROMPT_CCS
		,A.PROMPT_CRC
		,A.PROMPT_RETINOPATHY
		,A.PROMPT_HBA1C
		,C.LOCN
		,C.CTRN
		,C.SUPERVISOR_NUID
		,C.SUPERVISOR_NAME
	FROM PROMPT_FAILS_ALL A
	LEFT JOIN FAILS_PAT_NAMES B
		ON A.PAT_MRN_iD = B.PAT_MRN_ID
	LEFT JOIN USER_INFO C
		ON A.ROOMINGPROVIDERNUID = C.NUID
	ORDER BY 1, B.PAT_NAME
	;
QUIT;

%let TEMPLATE_PATH = /gpfsFS2/sasdata/nfs/SCL_MOC_Analytics/Category/Quality/Templates/PROMPT_Inreach_Summary_Template.xlsm;
%let OUTPUT_DIR = /gpfsFS2/sasdata/nfs/SCL_MOC_Analytics/Category/Quality/Output/;
%let OUTPUT_NAME = PROMPT_Inreach_Summary.xlsm;
%let WINDOWS_DESTINATION = \\cs.msds.kp.org\kpctinas\NC\SCL_MOC_Analytics\Category\Quality\Output;

%let OUTFILE = /gpfsFS2/sasdata/nfs/SCL_MOC_Analytics/Category/Quality/Output/PROMPT_Inreach_Summary.xlsm;

PROC SORT DATA=COMBO_DATA (WHERE=(SUPERVISOR_NUID) KEEP=SUPERVISOR_NUID SUPERVISOR_EMAIL SUPERVISOR_NAME) OUT=DISTRO_NUID_INFO NODUPKEY;
	BY SUPERVISOR_NUID;
RUN;

DATA DISTRO_NUID_INFO;
	SET DISTRO_NUID_INFO;
	*SET DISTRO_NUID_INFO (WHERE=(SUPERVISOR_NUID in('D906138')));
	CHECK = 'X';
	*RETAIN COUNT 0;
	*COUNT=COUNT + 1;
	COUNT = _N_;
	FNAME = SUBSTR(SUPERVISOR_NAME,1,INDEX(SUPERVISOR_NAME," ")-1);
RUN;

PROC SUMMARY DATA=DISTRO_NUID_INFO NWAY;
     CLASS CHECK;
      VAR COUNT;
     OUTPUT MAX= OUT=EMAILMAX (DROP = _TYPE_ _FREQ_);
RUN;

DATA _NULL_;
     SET EMAILMAX;
     CALL SYMPUT("EMAILMAX",COUNT);
RUN;
%PUT INFO: &EMAILMAX;

%LET I = 1;

DATA FILE_INFO;
SOURCE='Q:\Category\Quality\Code\PROMPT_Inreach_Summary.sas';
run;



%MACRO EMAILDIST(TEMPLAST, OUTDIR, OUTNAME, WINDEST, ATTCH);

%DO %WHILE (&I <= &EMAILMAX);

DATA _NULL_;
     SET DISTRO_NUID_INFO (WHERE=(COUNT=&I));	 
     CALL SYMPUT('EMAIL',"'"||TRIM(SUPERVISOR_EMAIL)||"'");
	 CALL SYMPUT('RPT_DIST_ID',"'"||trim(SUPERVISOR_NUID)||"'");
	 CALL SYMPUT('PRINT_NUID',trim(SUPERVISOR_NUID));
	 CALL SYMPUT('EMAIL_FNAME',trim(FNAME));
	 CALL SYMPUT('PRINT_RUN_DT',PUT(TODAY(),MMDDYY10.));
RUN;
%PUT INFO: &EMAIL;
%PUT INFO: &RPT_DIST_ID;
%PUT INFO: &EMAIL_FNAME;
%PUT INFO: &PRINT_RUN_DT;


DATA TEMP_MY_DATA;
	SET RPT_DATA_EMP;
	WHERE SUPERVISOR_NUID =&RPT_DIST_ID;
RUN;

DATA T_PT_DETAILS_MOPS;
	LENGTH NUIDPT $12.;
	SET PT_DETAILS_MOPS;
	WHERE SUPERVISOR_NUID =&RPT_DIST_ID;;
	BY NUID PAT_NAME;
	IF FIRST.NUID THEN COUNT = 1;
		ELSE COUNT+1;
	NUIDPT = COMPRESS(NUID||PUT(COUNT,$Z2.));
RUN;

PROC SORT DATA=T_PT_DETAILS_MOPS (WHERE=(COUNT=1) KEEP=NUID ROOMINGPROVIDERNAME COUNT) 
OUT=T_MOPS_EMPL_LIST NODUPKEY;
BY ROOMINGPROVIDERNAME;
RUN;



PROC SQL;
	CREATE TABLE T_EMPL_LIST AS SELECT DISTINCT
		EMPL_NUID AS NUID
		,DEPT
		,EMPL_NAME AS RoomingProviderName
	FROM TEMP_MY_DATA
	ORDER BY 2,3
	;
QUIT;



%XLSM_EXPORT1(&TEMPLAST, &OUTDIR, &OUTNAME, &WINDEST);

	proc datasets lib=labxcel;
		DELETE DATA_RPT_dept 'DATA_RPT_dept$'n;
		DELETE DATA_RPT_emp 'DATA_RPT_emp$'n;
		DELETE DATA_DATES 'DATA_DATES$'n;
		DELETE SOURCE 'SOURCE$'n;
		DELETE DATA_MOPS 'DATA_MOPS$'n;
		DELETE DATA_MOPS_EMPLS 'DATA_MOPS_EMPLS$'n;	
		DELETE T_EMPL_LIST 'T_EMPL_LIST$'n;
	RUN;

	data labxcel.DATA_RPT_dept;
		set Work.RPT_DATA_DEPT;
	run;

	data labxcel.DATA_RPT_emp;
		set Work.TEMP_MY_DATA;
	run;

	data labxcel.DATA_DATES;
		set Work.DATES;
	run;

	data labxcel.SOURCE;
		set Work.FILE_INFO;
	run;

	data labxcel.DATA_MOPS;
		set Work.T_PT_DETAILS_MOPS;
	run;

	data labxcel.DATA_MOPS_EMPLS;
		set Work.T_MOPS_EMPL_LIST;
	run;

	data labxcel.T_EMPL_LIST;
		set Work.T_EMPL_LIST;
	run;

%XLSM_EXPORT2();

FILENAME NOTES EMAIL 
	FROM=("BEN.K.NGUYEN@KP.ORG")
	to=(&EMAIL)
/*	cc=(&CCLIST)*/
	bcc=("BEN.K.NGUYEN@KP.ORG" "Robin.x1.Singh@KP.ORG")
/*	TO=("BEN.K.NGUYEN@KP.ORG")*/
/*	CC=("Robin.x1.Singh@KP.ORG")*/
	SUBJECT = ("PROMPT Screening Inreach Report - &PRINT_NUID [phi] ")
	ATTACH = ("&ATTCH" content_type="application/excel" )
	;

	DATA _NULL_;                                                          
	FILE NOTES;  
		PUT @1  "Hi &EMAIL_FNAME , ";  
		PUT @1  " ";
		PUT @1  "The attached file displays a summary of PROMPT Inreach success for your employees.";
		PUT @1  " ";
		PUT @1  "The report covers inreach opportunities from last week as well as a backsweep period for and displays PROMPT action taken as well as patient screening rates.";
		PUT @1  "You can use the:'Print a Single Sheet for each Employee' button in the Pt_Details sheet to see a list of patients with need follow-up by employee";
		PUT @1  " You will need to enable macros in order use this button.";
		PUT @1  " ";
		PUT @1  "PLEASE use the OPEN or SAVE function in order to properly view the report.";
		PUT @1  " ";
		PUT @1  "Report updated on: &PRINT_RUN_DT";		
		PUT @1  " ";
	RUN;
%LET I=%EVAL(&I+1);      
%END;                    
%MEND EMAILDIST;         

%EMAILDIST(&TEMPLATE_PATH, &OUTPUT_DIR, &OUTPUT_NAME, &WINDOWS_DESTINATION, &OUTFILE);
